name: Build

on:
  push:
    paths:
      - "RouletteRecorder/**"
    branches: [main]
  pull_request:
    paths:
      - "RouletteRecorder/**"
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        configuration: [Release]

    runs-on: windows-latest

    env:
      THIRDPARTY_ACT: https://github.com/EQAditu/AdvancedCombatTracker/releases/download/3.6.0.275/ACTv3.zip
      THIRDPARTY_FFXIV_ACT_PLUGIN: https://github.com/ravahn/FFXIV_ACT_Plugin/raw/master/Releases/FFXIV_ACT_Plugin_SDK_2.0.7.0.zip
      SOLUTION_NAME: RouletteRecorder.sln

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Setup NuGet.exe for use with actions
        uses: nuget/setup-nuget@v2

      - name: Setup MSBuild.exe
        uses: microsoft/setup-msbuild@v2

      - name: Setup thirdparty dependencies
        run: |
          nuget restore ${{ env.SOLUTION_NAME }}

          New-Item -Name "thirdparty" -ItemType "directory" -Force

          Invoke-WebRequest -Uri ${{ env.THIRDPARTY_ACT }} -OutFile thirdparty\ACT.zip
          Expand-Archive thirdparty\ACT.zip -DestinationPath thirdparty\ACT -Force

          Invoke-WebRequest -Uri ${{ env.THIRDPARTY_FFXIV_ACT_PLUGIN }} -OutFile thirdparty\FFXIV_ACT_Plugin.zip
          Expand-Archive thirdparty\FFXIV_ACT_Plugin.zip -DestinationPath thirdparty\FFXIV_ACT_Plugin -Force

          Get-ChildItem .\thirdparty
          Get-ChildItem .\thirdparty\ACT
          Get-ChildItem .\thirdparty\FFXIV_ACT_Plugin

      - name: Build
        run: msbuild $env:SOLUTION_NAME /p:Configuration=$env:Configuration
        env:
          Configuration: ${{ matrix.configuration }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Bundle
          path: bin\*.zip

      - name: Extract version name
        id: version
        run: |
          $version = [System.Version]::Parse((Get-Content -Path "RouletteRecorder\Properties\AssemblyInfo.cs" | Select-String -Pattern "^\[assembly: AssemblyVersion\(""(.*)""\)\]").Matches.Groups[1].Value)
          echo "VERSION=$version" >> $env:GITHUB_OUTPUT

      - name: Release
        uses: softprops/action-gh-release@v2
        if: ${{ github.event_name != 'pull_request' }}
        with:
          tag_name: v${{ steps.version.outputs.VERSION }}
          files: bin/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
